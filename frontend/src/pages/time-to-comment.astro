---
import BugStats from "@components/BugStats.astro";
import { Temporal } from "@js-temporal/polyfill";
import { AgeStats, RepoSummary } from "@lib/repo-summaries";
import { z } from "zod";
import Layout from "../layouts/Layout.astro";

const repos = (await Astro.glob("../../../scanner/summaries/*/*.json")).map(
    (repo) => RepoSummary.parse(repo)
);
const GlobalStats = z.object({
    ageAtCloseMs: AgeStats,
    openAgeMs: AgeStats,
    firstCommentLatencyMs: AgeStats,
    closedFirstCommentLatencyMs: AgeStats,
    openFirstCommentLatencyMs: AgeStats,
});
const globalStats = GlobalStats.parse(
    (await Astro.glob("../../../scanner/summaries/global.json"))[0]
);
const maxAge = Temporal.Duration.from({
    // Use the open age because it's bigger in practice.
    seconds: Math.round(globalStats.openFirstCommentLatencyMs[90].total("seconds")),
});
---

<Layout title="Browser Spec Maintenance Status">
    <main>
        <h1>Browser Spec Maintenance Status</h1>
        <table>
            <tbody>
                <tr>
                    <td>{globalStats.ageAtCloseMs.count} total closed bugs</td>
                    <td>
                        <BugStats
                            ageStats={globalStats.ageAtCloseMs}
                            description="closed bugs"
                            {maxAge}
                        />
                    </td>
                </tr>
                <tr>
                    <td
                        >{globalStats.openFirstCommentLatencyMs.count} open
                        issues with a comment</td
                    >
                    <td>
                        <BugStats
                            ageStats={globalStats.openFirstCommentLatencyMs}
                            description="open commented issues"
                            {maxAge}
                        />
                    </td>
                </tr>
                <tr>
                    <td
                        >{globalStats.closedFirstCommentLatencyMs.count} closed
                        issues with a comment</td
                    >
                    <td>
                        <BugStats
                            ageStats={globalStats.closedFirstCommentLatencyMs}
                            description="closed commented issues"
                            {maxAge}
                        />
                    </td>
                </tr>
                <tr>
                    <td
                        >{globalStats.firstCommentLatencyMs.count} total
                        issues with a comment</td
                    >
                    <td>
                        <BugStats
                            ageStats={globalStats.firstCommentLatencyMs}
                            description="total commented issues"
                            {maxAge}
                        />
                    </td>
                </tr>
            </tbody>
            <tbody>
                <tr><td></td><th>Time to First Comment</th></tr>
                {
                    repos.map((repo) => (
                        <tr>
                            <td>
                                <a href={`${repo.org}/${repo.repo}`}>
                                    {repo.org}/{repo.repo}
                                </a>
                            </td>
                            <td>
                                {repo.firstCommentLatencyMs ? (
                                    <BugStats
                                        ageStats={repo.firstCommentLatencyMs}
                                        description="bugs with comments"
                                        {maxAge}
                                    />
                                ) : (
                                    "No bugs with comments"
                                )}
                            </td>
                        </tr>
                    ))
                }
            </tbody>
        </table>
    </main>
</Layout>
