---
import Duration from "@components/Duration.astro";
import GhLabel from "@components/GhLabel.astro";
import {
agendaLengthSLO,
agendaSLO,
editsSLO,
soonSLO,
triageSLO,
urgentSLO,
} from "@lib/slo";
import * as ghLabels from "@lib/triage-labels";
import Layout from "../layouts/Layout.astro";
---

<Layout title="About this maintenance tracker">
    <main>
        <h1>About this maintenance tracker</h1>
        <p>
            First, <a href="https://github.com/speced/spec-maintenance/issues"
                >issues</a
            > and other contributions are always welcome through our <a
                href="https://github.com/speced/spec-maintenance"
                >Github repository</a
            >.
        </p>
        <p>
            This tool scans the Github repositories for the browser
            specifications from <a href="https://github.com/w3c/browser-specs"
                >browser-specs</a
            > and finds issues and PRs that have been waiting for action for longer
            than they should have. (We generally use "issue" to refer to both issues
            and PRs.) We infer a <a href="#priorities">priority</a> for each issue.
            Issues can also be in a few <a href="#categories"
                >other categories</a
            > like "being on a WG's agenda" or "needing their resolution to be edited
            into the specification".
        </p>
        <p>
            We then assign <a
                href="https://en.wikipedia.org/wiki/Service-level_objective"
                >Service Level Objectives</a
            > (SLOs) depending on the priority or membership in other categories.
            For a priority, the target is generally resolving the whole issue, while
            for the other categories, it's just leaving that particular category.
            Generally a specification's working group or editors are responsible
            for making sure issues are resolved within their SLOs, but it's important
            to note that <b>there are no consequences</b> for violating an SLO. The
            issue just gets listed in the appropriate place on this website.
        </p>
        <p>
            Finally, in addition to this human-readable website, we expose <a
                href="#machine-readable-data"
                >machine-readable versions of the data</a
            > in JSON and CSV formats.
        </p>
        <h2 id="priorities">Priorities</h2>
        <dl>
            <dt id="urgent">Urgent</dt>
            <dd>
                Inferred from the <GhLabel {...ghLabels.urgent} /> label. These issues
                should be be resolved within <b><Duration d={urgentSLO} /></b>.
            </dd>
            <dt id="soon">Soon</dt>
            <dd>
                Inferred from the <GhLabel {...ghLabels.soon} /> label. These issues
                should be resolved within <b><Duration d={soonSLO} months /></b
                >.
            </dd>
            <dt id="eventually">Eventually</dt>
            <dd>
                This is the <b>default</b> category for triaged issues, and it doesn't
                commit to resolving them with any particular deadline. This category
                is identified in 3 different ways:
                <ul>
                    <li>
                        If a repository has configured a <a
                            href="https://github.com/speced/spec-maintenance/blob/main/scanner/per-repo.ts"
                            >per-repository triage predicate</a
                        >, that's used. For example, the CSSWG treats issues as
                        triaged if <em>any</em> label has been applied, on the theory
                        that whoever applied the label also decided not to give the
                        issue a higher priority.
                    </li>
                    <li>
                        The <GhLabel {...ghLabels.eventually} /> label.
                    </li>
                    <li>
                        If a repository hasn't defined the <GhLabel
                            {...ghLabels.eventually}
                        /> label, an issue without another priority label is counted
                        as triaged if it's assigned to a <a
                            href="https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/about-milestones"
                            >milestone</a
                        > or someone other than the original author has commented.
                    </li>
                </ul>
            </dd>

            <dt id="need-triage">Needs triage</dt>
            <dd>
                All other issues need triage. Issues should be triaged within <b
                    ><Duration d={triageSLO} /></b
                >.
            </dd>
        </dl>

        <p>
            The <a href="https://en.wikipedia.org/wiki/Service_level_indicator"
                >Service Level Indicator</a
            > for priorities (the amount of time that gets compared to the SLO) is
            the total amount of time the issue has had that priority or a higher
            one applied. When someone adds the <GhLabel
                {...ghLabels.needsFeedback}
            />
            label, the SLI stops advancing until the issue author replies. The SLI
            for a PR also stops advancing while the PR is marked as a <a
                href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests#draft-pull-requests"
                >draft</a
            >.
        </p>

        <h2 id="categories">Other categories</h2>
        <p>
            The <a href="https://en.wikipedia.org/wiki/Service_level_indicator"
                ><abbr title="Service Level Indicator">SLI</abbr></a
            > for handling category membership only counts the current application
            of this label, unlike priorities which include previous times their label
            was added and then removed.
        </p>
        <dl>
            <dt id="agenda">On the agenda</dt>
            <dd>
                <p>
                    An issue labeled <GhLabel {...ghLabels.agenda} /> should be discussed
                    and have the label removed within <b
                        ><Duration d={agendaSLO} weeks /></b
                    >.
                </p>
                <p>
                    Groups should have enough meetings to keep their agendas
                    below <b>{agendaLengthSLO} items</b>.
                </p>
            </dd>
            <dt id="needs-edits">Needs edits</dt>
            <dd>
                An issue labeled <GhLabel {...ghLabels.needsEdits} /> has a decision
                recorded in the issue and needs a spec editor to apply that decision
                to the specification. This should happen within <b
                    ><Duration d={editsSLO} weeks /></b
                >.
            </dd>
        </dl>

        <h2 id="machine-readable-data">Machine-readable data</h2>
        <p>
            We provide both a global summary of how all repositories are doing
            at their SLOs, and separate JSON files for each repository.
        </p>
        <p>
            The global summary is available as both a <a
                href={`${import.meta.env.BASE_URL}slo.csv`}>CSV file</a
            > (generated by <a
                href="https://github.com/speced/spec-maintenance/blob/main/frontend/src/pages/slo.csv.ts"
                ><code>/frontend/src/pages/slo.csv.ts</code></a
            >) and a <a href={`${import.meta.env.BASE_URL}slo.json`}
                >JSON file</a
            > (with a <a href="https://zod.dev/">Zod</a>
            <a
                href="https://github.com/speced/spec-maintenance/blob/main/frontend/src/lib/published-json.ts"
                >schema called <code>SummaryJson</code></a
            >).
        </p>
        <p>
            Each repository page <code
                >{import.meta.env.BASE_URL}<var>org</var>/<var>repo</var>/</code
            > has a paired <code
                >{import.meta.env.BASE_URL}<var>org</var>/<var>repo</var
                >.json</code
            > again with a Zod <a
                href="https://github.com/speced/spec-maintenance/blob/main/frontend/src/lib/published-json.ts"
                >schema called <code>RepoJson</code></a
            >. For example, the machine-readable version of the <a
                href={`${import.meta.env.BASE_URL}whatwg/url`}>whatwg/url</a
            > triage data is at <a
                href={`${import.meta.env.BASE_URL}whatwg/url.json`}
                >{import.meta.env.BASE_URL}whatwg/url.json</a
            >
        </p>
    </main>
</Layout>
